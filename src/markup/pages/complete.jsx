import React, { useEffect, useState } from 'react';
import dayjs from 'dayjs';
import axios from 'axios';
import { useNavigate } from "react-router-dom";
import Spinner from 'react-bootstrap/Spinner';

const {
  REACT_APP_UMEDI_URL,
  REACT_APP_UMEDI_ACCESS_TOKEN
} = process.env;

function Complete() {
  const bookingObject = JSON.parse(sessionStorage.getItem('bookingObject'));
  const navigate = useNavigate();
	const [loading, setLoading] = useState(false);
  const [condition] = useState(bookingObject?.condition);
	const [hospital] = useState(bookingObject?.hospital);
	const [candidate_dt] = useState(bookingObject?.schedules);
	const [error, setError] = useState(null);
	

	useEffect(() => {
		if (Object.keys(bookingObject).length === 0) {
			navigate("/main");
		} else {
			bookAppointment();
		}
	}, []);

	const bookAppointment = () => {

		setLoading(true);
		const schedules = bookingObject?.schedules?.map(schedule => `${dayjs(schedule.date).format('YYYY-MM-DD')} ${schedule.slot}`);
		const dateOfBirth = dayjs(bookingObject?.information?.dateOfBirth).format('YYYYMMDD');

		console.log(bookingObject)
    axios.put(
			`/appointment`,
			{
				hospital_id: bookingObject?.hospitalId,
				speciality: bookingObject?.conditionCode,
				candidate_dt: schedules,
				user: {
					additional_information: bookingObject?.information?.additionalInformation,
					additional_imgs: bookingObject?.information?.additionalImages,
					insurance_imgs: bookingObject?.information?.insuranceImages,
					date_of_birth: dateOfBirth,
					gender: bookingObject?.information?.gender?.toLowerCase(),
					first_name: bookingObject?.information?.firstName,
					last_name: bookingObject?.information?.lastName,
					phone: bookingObject?.information?.phoneNumber,
					email: bookingObject?.information?.email,
					claim_yn: bookingObject?.insuranceClaiming ? "y" : "n"
				}
			},
			{
				baseURL: REACT_APP_UMEDI_URL,
				headers: {
					'X-Api-Key': REACT_APP_UMEDI_ACCESS_TOKEN
				}
			},
		).then(({data}) => {	
			setLoading(false);
  		sessionStorage.setItem('bookingObject', JSON.stringify({}));
			setError(null);
		}).catch(error => {
			setError(error);
			setLoading(false);
		})
	}

	return(
		<>
			<div className="page-content bg-white">
				<section className="section-area section-sp1 bg-white">
					<div className="container">
						<div className="col-md-12 mb-10 mt-40 information-container">
							<div className="input-area" id="comments">

								<div className="input-container">
									{
										loading ? (
											<div className="loading-wrap">
												<Spinner animation="border" role="status" />
											</div>
										) : (
											<div className="complete mb-30">
												{
													error ? (
														<>
															<section className="section-area section-sp2 error-404">
																<div className="container">
																	<div className="inner-content">
																		<h2 className="error-title"><span></span></h2>
																		<p>Sorry, Please try again later.</p>
																		<div className="clearfix">
																		</div>
																	</div>
																</div>
															</section>
														</>
														) : (
														<>
															<div className="team-media">
																<svg width="113" height="113" viewBox="0 0 113 113" fill="none" xmlns="http://www.w3.org/2000/svg">
																	<path fillRule="evenodd" clipRule="evenodd" d="M112.716 31.3348C109.166 18.0901 96.1328 9.87935 82.8631 12.0453V12.0413H80.693C71.8369 12.0655 63.4972 7.87655 58.2293 0.758099C57.4711 -0.2527 55.7783 -0.2527 55.0162 0.758099C49.7503 7.87693 41.4116 12.0661 32.5565 12.0413H30.3703C17.1207 9.87935 4.07973 18.0941 0.533678 31.3348C0.248055 32.4047 0.883758 33.5036 1.9537 33.7896L49.2478 46.4606C49.7617 46.5991 50.3095 46.5277 50.7707 46.2622C51.2319 45.9966 51.5687 45.5586 51.7068 45.0447C54.8637 33.2601 49.5045 21.1907 39.432 15.3184C46.1082 13.8634 52.1373 10.2948 56.6247 5.14224C61.1112 10.2951 67.141 13.8626 73.8175 15.3144C63.7489 21.1826 58.3857 33.2561 61.5467 45.0407C61.8381 46.108 62.9362 46.7403 64.0057 46.4566L111.3 33.7855C112.368 33.4997 113.001 32.4025 112.716 31.3348ZM101.336 55.5779C101.713 55.9531 102.223 56.1636 102.756 56.1635C103.287 56.1643 103.796 55.9536 104.172 55.5779L110.189 49.5613C110.972 48.7781 110.972 47.5086 110.189 46.7254L104.172 40.7087C103.388 39.9258 102.119 39.9258 101.336 40.7087L95.3185 46.7254C94.5355 47.5086 94.5355 48.7781 95.3185 49.5613L101.336 55.5779ZM9.07404 63.6001C9.45141 63.9752 9.96194 64.1858 10.4941 64.1857C11.0252 64.1865 11.5347 63.9758 11.9101 63.6001L17.9271 57.5834C18.7101 56.8003 18.7101 55.5308 17.9271 54.7476L11.9101 48.7309C11.1269 47.948 9.85726 47.948 9.07404 48.7309L3.05698 54.7476C2.27399 55.5308 2.27399 56.8003 3.05698 57.5834L9.07404 63.6001ZM27.8395 92.2634C27.081 92.2616 26.3879 91.8336 26.0464 91.1564L24.153 87.3779C22.4966 84.0728 23.1449 80.0782 25.7616 77.4665C26.6441 76.584 27.1174 75.4369 27.1174 74.2135C27.1174 72.9901 26.6441 71.8429 25.7776 70.9765C23.1505 68.3646 22.4955 64.362 24.153 61.049L26.0464 57.2706C26.5415 56.2792 27.7466 55.877 28.738 56.3721C29.7294 56.8672 30.1317 58.0722 29.6366 59.0635L27.7432 62.846C26.8607 64.6109 27.2057 66.7328 28.6016 68.1246C30.2383 69.7611 31.1328 71.9151 31.1328 74.2135C31.1328 76.5118 30.2383 78.6618 28.6177 80.2823C27.2116 81.6739 26.8588 83.8114 27.7432 85.5809L29.6366 89.3594C29.9484 89.9817 29.9153 90.7213 29.549 91.3132C29.1827 91.9051 28.5356 92.2648 27.8395 92.2634ZM90.7215 112.319C90.0263 112.318 89.3809 111.958 89.0151 111.367C88.6492 110.776 88.6149 110.037 88.9244 109.415L90.8178 105.636C91.7003 103.876 91.3553 101.75 89.9593 100.358C86.5984 97.0068 86.5895 91.5663 89.9393 88.2042C91.3553 86.7883 91.6963 84.6664 90.8178 82.9055L88.9244 79.1271C88.4292 78.1357 88.8315 76.9307 89.8229 76.4356C90.8143 75.9405 92.0194 76.3428 92.5146 77.3341L94.4079 81.1126C96.0617 84.4181 95.4137 88.411 92.7994 91.024C91.9364 91.8805 91.4494 93.045 91.4457 94.2608C91.4419 95.4766 91.9217 96.6441 92.7793 97.5059C95.4148 100.141 96.0606 104.12 94.4079 107.437L92.5146 111.216C92.1713 111.891 91.4789 112.317 90.7215 112.319ZM7.31332 56.1635L10.4943 59.3443L13.6754 56.1635L10.4943 52.9827L7.31332 56.1635ZM41.1649 107.722C41.5423 108.097 42.0528 108.308 42.585 108.308C43.1161 108.309 43.6256 108.098 44.001 107.722L50.018 101.706C50.801 100.922 50.801 99.653 50.018 98.8698L44.001 92.8531C43.2178 92.0702 41.9482 92.0702 41.1649 92.8531L35.1479 98.8698C34.3649 99.653 34.3649 100.922 35.1479 101.706L41.1649 107.722ZM39.4042 100.286L42.5852 103.467L45.7663 100.286L42.5852 97.1049L39.4042 100.286ZM99.5749 48.1413L102.756 51.3221L105.937 48.1413L102.756 44.9605L99.5749 48.1413ZM69.2445 103.711C69.6219 104.086 70.1324 104.297 70.6645 104.297C71.4744 104.295 72.2037 103.806 72.5134 103.058C72.823 102.31 72.6523 101.449 72.0806 100.875L68.0692 96.8642C67.2822 96.1042 66.0312 96.1151 65.2576 96.8887C64.4839 97.6623 64.473 98.9132 65.2331 99.7001L69.2445 103.711ZM102.756 108.308C101.945 108.308 101.214 107.82 100.904 107.071C100.593 106.323 100.763 105.461 101.336 104.887L105.347 100.875C106.134 100.115 107.385 100.126 108.159 100.9C108.932 101.673 108.943 102.924 108.183 103.711L104.172 107.722C103.796 108.098 103.287 108.309 102.756 108.308ZM12.6533 111.082C12.964 111.831 13.6948 112.319 14.5054 112.319C15.0365 112.32 15.546 112.109 15.9214 111.733L19.9328 107.722C20.6929 106.935 20.682 105.684 19.9084 104.911C19.1347 104.137 17.8837 104.126 17.0967 104.886L13.0854 108.898C12.5131 109.472 12.3426 110.334 12.6533 111.082ZM5.01479 30.4564L48.2614 42.0404C50.2451 30.5798 43.1673 19.4961 31.9351 16.4737C26.1792 14.9135 20.0382 15.7224 14.8828 18.7199C10.3096 21.3428 6.81349 25.5009 5.01479 30.4564ZM64.9887 42.0404C63.8561 35.4983 65.6705 28.7899 69.9466 23.7105C74.2226 18.6311 80.5237 15.6992 87.1636 15.6995C91.0627 15.6995 94.9056 16.7223 98.3674 18.7198C102.941 21.342 106.438 25.5004 108.235 30.4563L64.9887 42.0404ZM29.9638 49.5595C30.747 48.7763 30.747 47.5064 29.9637 46.7232C29.1805 45.94 27.9105 45.94 27.1273 46.7233C26.344 47.5065 26.344 48.7763 27.1273 49.5595C27.9106 50.3427 29.1805 50.3427 29.9638 49.5595ZM71.5492 71.8655C71.0156 71.505 70.6649 70.8947 70.6649 70.2024C70.6649 69.0948 71.5629 68.1969 72.6706 68.1969C75.988 68.1969 78.6876 65.4974 78.6876 62.1802C78.6876 58.863 75.988 56.1636 72.6706 56.1636C71.5629 56.1636 70.6649 55.2656 70.6649 54.158C70.6649 53.0504 71.5629 52.1524 72.6706 52.1524C78.2022 52.1524 82.699 56.6489 82.699 62.1802C82.699 65.6345 80.9453 68.6852 78.281 70.4892C79.769 71.9463 80.6935 73.9766 80.6935 76.2192C80.6935 78.8384 79.434 81.1689 77.4804 82.637C78.854 84.4581 79.0779 86.8998 78.0584 88.9403C77.0389 90.9808 74.9519 92.2682 72.6708 92.2636C71.5631 92.2636 70.6651 91.3657 70.6651 90.2581C70.6651 89.1504 71.5631 88.2525 72.6708 88.2525C73.7739 88.2525 74.6765 87.35 74.6765 86.2469C74.6765 85.1439 73.7739 84.2414 72.6708 84.2414C71.5631 84.2414 70.6651 83.3435 70.6651 82.2358C70.6651 81.1282 71.5631 80.2303 72.6708 80.2303C74.8862 80.2303 76.6821 78.4345 76.6821 76.2192C76.6821 74.0039 74.8862 72.2081 72.6708 72.2081C72.4922 72.2081 72.319 72.1847 72.1542 72.1409C71.9356 72.0828 71.7317 71.9888 71.5492 71.8655ZM40.5795 78.2247C40.5795 79.3324 41.4775 80.2303 42.5852 80.2303C47.0097 80.2303 50.6079 76.6323 50.6079 72.2081C50.6079 69.5848 49.3444 67.2543 47.3948 65.7903C48.7554 63.9663 48.9721 61.5314 47.9551 59.4958C46.9381 57.4602 44.8608 56.1712 42.5852 56.1636C41.4775 56.1636 40.5795 57.0616 40.5795 58.1692C40.5795 59.2768 41.4775 60.1747 42.5852 60.1747C43.6883 60.1747 44.5909 61.0772 44.5909 62.1803C44.5909 63.2833 43.6883 64.1858 42.5852 64.1858C41.4775 64.1858 40.5795 65.0838 40.5795 66.1914C40.5795 67.299 41.4775 68.197 42.5852 68.197C44.8006 68.197 46.5966 69.9928 46.5966 72.2081C46.5966 74.4233 44.8006 76.2192 42.5852 76.2192C41.4775 76.2192 40.5795 77.1171 40.5795 78.2247ZM102.756 96.2747C101.648 96.2747 100.75 95.3768 100.75 94.2692C100.75 93.1615 101.648 92.2636 102.756 92.2636C103.859 92.2636 104.762 91.3611 104.762 90.2581C104.762 89.155 103.859 88.2525 102.756 88.2525C101.648 88.2525 100.75 87.3546 100.75 86.2469C100.75 85.1393 101.648 84.2414 102.756 84.2414C103.859 84.2414 104.762 83.3389 104.762 82.2358C104.762 81.1328 103.859 80.2303 102.756 80.2303C101.648 80.2303 100.75 79.3324 100.75 78.2247C100.75 77.1171 101.648 76.2192 102.756 76.2192C103.859 76.2192 104.762 75.3167 104.762 74.2136C104.762 73.1106 103.859 72.2081 102.756 72.2081C101.648 72.2081 100.75 71.3102 100.75 70.2025C100.75 69.0949 101.648 68.197 102.756 68.197C105.125 68.2056 107.268 69.6014 108.235 71.7639C109.201 73.9265 108.81 76.4546 107.237 78.2247C109.291 80.5044 109.291 83.9672 107.237 86.2469C108.81 88.0171 109.201 90.5452 108.235 92.7077C107.268 94.8703 105.125 96.2661 102.756 96.2747ZM10.4943 100.286C8.12552 100.277 5.98163 98.8813 5.01533 96.7188C4.04902 94.5562 4.43964 92.0281 6.01358 90.258C3.9596 87.9783 3.9596 84.5155 6.01358 82.2358C4.43964 80.4656 4.04902 77.9375 5.01533 75.775C5.98163 73.6124 8.12552 72.2167 10.4943 72.208C11.602 72.208 12.5 73.1059 12.5 74.2135C12.5 75.3212 11.602 76.2191 10.4943 76.2191C9.39116 76.2191 8.4886 77.1216 8.4886 78.2247C8.4886 79.3277 9.39116 80.2302 10.4943 80.2302C11.602 80.2302 12.5 81.1281 12.5 82.2358C12.5 83.3434 11.602 84.2413 10.4943 84.2413C9.39116 84.2413 8.4886 85.1438 8.4886 86.2469C8.4886 87.3499 9.39116 88.2524 10.4943 88.2524C11.602 88.2524 12.5 89.1503 12.5 90.258C12.5 91.3656 11.602 92.2635 10.4943 92.2635C9.39116 92.2635 8.4886 93.166 8.4886 94.2691C8.4886 95.3721 9.39116 96.2746 10.4943 96.2746C11.602 96.2746 12.5 97.1725 12.5 98.2802C12.5 99.3878 11.602 100.286 10.4943 100.286ZM44.002 84.8258C44.7853 85.609 44.7853 86.8789 44.002 87.6621C43.2188 88.4453 41.9488 88.4454 41.1656 87.6622C40.3823 86.879 40.3823 85.6091 41.1655 84.8259C41.9488 84.0426 43.2187 84.0426 44.002 84.8258ZM80.1036 107.715C80.8868 106.932 80.8868 105.662 80.1035 104.879C79.3202 104.095 78.0503 104.095 77.267 104.879C76.4838 105.662 76.4838 106.932 77.2671 107.715C78.0504 108.498 79.3203 108.498 80.1036 107.715ZM27.9595 96.8579C28.7428 97.6412 28.7428 98.911 27.9596 99.6942C27.1763 100.477 25.9064 100.477 25.1231 99.6943C24.3398 98.9111 24.3398 97.6412 25.1231 96.858C25.9063 96.0748 27.1762 96.0747 27.9595 96.8579ZM98.1546 65.5982C98.9378 64.8149 98.9378 63.5451 98.1545 62.7619C97.3713 61.9787 96.1013 61.9787 95.3181 62.7619C94.5348 63.5452 94.5348 64.815 95.3181 65.5982C96.1014 66.3814 97.3713 66.3814 98.1546 65.5982Z" fill="#006EB7"/>
																</svg>
															</div>
															<div className="team-info">
															<div className="team-info-content">
																<h4 className="title">Completed!</h4>
																<span className="text-secondary">
																	<div>Appointment successfully booked.</div>
																	<div>You will receive a notification and U-Medi coordicator will contact you.</div>
																</span>
															</div>
															<div className="confirm-wrap">
																<div>
																	<i className='fa fa-hospital'></i>
																	&nbsp;&nbsp;&nbsp;&nbsp;
																	{hospital}
																</div>
																<div>
																	<i className='fa fa-user-md'></i>
																	&nbsp;&nbsp;&nbsp;&nbsp;
																	{condition}
																</div>
																<div>
																	{
																		candidate_dt?.map((schedule, idx) => (
																			<div key={idx}>
																				{idx === 0 && <i className='fa fa-calendar'></i>}
																				{idx === 0 ? <>&nbsp;&nbsp;&nbsp;&nbsp;</> : <>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</>}
																				{dayjs(schedule?.date).format('YYYY MMM-DD')}, {schedule?.slot}
																			</div>
																		))
																	}
																</div>
															</div>
														</div>
														</>
													)
												}
											</div>
										)
									}
								</div>

							</div>
						</div>
					</div>
				</section>
			</div>
		</>
	);
}

export default Complete;